# Kalava worker configuration file

# By default Kalava worker does not run as a daemon. Use 'yes' if you 
# need it. Note that Kalava will write a pid file in /var/run/kalava-worker.pid 
# when daemonized.
daemonize = no

# When running daemonized, Kalava worker writes a pid file in /var/run/kalava-worker.pid
# by default. You can specify a custom pid file location here.
pidfile = /var/run/kalava-worker.pid

# TCP listen() backlog.
# In high requests-per-second environments you need an high backlog in order
# to avoid slow clients connections issues. Note that the Linux kernel
# will silently truncate it to the value of /proc/sys/net/core/somaxconn so
# make sure to raise both the value of somaxconn and tcp_max_syn_backlog
# in order to get the desired effect.
tcp-backlog = 511

# PIR setting xml path.
# This is the path of the configuration file for PIR algorithm.
setting-xml-path = ../../setting/

# PIR setting xml name.
# This is the configuration file for PIR algorithm, you can tune the search result 
# through modifying parameters in the setting xml file. When server initialization 
# starts, it'll be copied to each worker's own workspace.
setting-xml = setting.xml

# PIR re-training delta peak
# Kalava service supports adding and removing incremental images in memory-based 
# index, anyway, the precision will decrease as more and more images were added.
# For sloving the question, we introduce the delta-peak parameter, when the 
# newly-added images reach the delta peak, a re-training will be triggered.
delta-peak = 10000

# PIR re-training delta ratio
# Ther service will re-train the images when newly-added pictures amounts to 
# delta-peak*delta-ratio and server idle time achieved to max value.
delta-ratio = 0.75

# PIR re-training idle time
# The server only re-trained when the service is idle, here we specified a re-traing
# idle time interval.
idletime-for-training = 600000

# Max clients
# Max number of simultaneous clients, clients more than max-clients will be blocked.
max-clients = 10

# Kalava worker threads to be created
# The specified threads will be created for processing clients' requests. Be careful,
# these threads will never exit automatically unless the service crashed.
thread-num = 10

# Timeout for Kalava worker thread
# The timeout value is used for checking the thread's working status.
thread-timeout = 60000

# Socket connecting timeout
# Specify the connecting timeouts until reporting an error.
conn-timeout = 8000

# Socket receive timeout
# Specify the receiving timeouts until reporting an error.
recv-timeout = 10000

# Socket send timeout
# Specify the sending timeouts until reporting an error.
send-timeout = 10000

# PIR log path
# When the service starts, the startup log will be written under the log path. If
# the path does not exist, the service will create the path by default.
log-path = ../log

# PIR log prefix
# The log file may need a prefix for telling differences between threads or processes.
# If this parameter is used, a prefix will be added before the log file name.
#log-prefix = 

# PIR log message size
# Under most circumstances, 1024 bytes is enough for log message.
log-size = 1024

# Log query buffer size
# If the log file size is larger than log-query-cache-size, we won't provide log query 
# functions as it consumes too large resources.
log-query-cache-size = 5242880

