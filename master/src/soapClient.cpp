/* soapClient.cpp
   Generated by gSOAP 2.8.17r from search.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.17r 2016-09-21 10:00:09 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__serviceInit(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string workspace, std::string tpldir, std::string recgmethod, std::string option, int *tag)
{	struct ns__serviceInit soap_tmp_ns__serviceInit;
	struct ns__serviceInitResponse *soap_tmp_ns__serviceInitResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_tmp_ns__serviceInit.workspace = workspace;
	soap_tmp_ns__serviceInit.tpldir = tpldir;
	soap_tmp_ns__serviceInit.recgmethod = recgmethod;
	soap_tmp_ns__serviceInit.option = option;
	soap_serializeheader(soap);
	soap_serialize_ns__serviceInit(soap, &soap_tmp_ns__serviceInit);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__serviceInit(soap, &soap_tmp_ns__serviceInit, "ns:serviceInit", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__serviceInit(soap, &soap_tmp_ns__serviceInit, "ns:serviceInit", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tag)
		return soap_closesock(soap);
	soap_default_int(soap, tag);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__serviceInitResponse = soap_get_ns__serviceInitResponse(soap, NULL, "", "");
	if (!soap_tmp_ns__serviceInitResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (tag && soap_tmp_ns__serviceInitResponse->tag)
		*tag = *soap_tmp_ns__serviceInitResponse->tag;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__train(struct soap *soap, const char *soap_endpoint, const char *soap_action, int autostart, int *tag)
{	struct ns__train soap_tmp_ns__train;
	struct ns__trainResponse *soap_tmp_ns__trainResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_tmp_ns__train.autostart = autostart;
	soap_serializeheader(soap);
	soap_serialize_ns__train(soap, &soap_tmp_ns__train);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__train(soap, &soap_tmp_ns__train, "ns:train", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__train(soap, &soap_tmp_ns__train, "ns:train", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tag)
		return soap_closesock(soap);
	soap_default_int(soap, tag);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__trainResponse = soap_get_ns__trainResponse(soap, NULL, "", "");
	if (!soap_tmp_ns__trainResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (tag && soap_tmp_ns__trainResponse->tag)
		*tag = *soap_tmp_ns__trainResponse->tag;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__trainAdd(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string imgPath, int *tag)
{	struct ns__trainAdd soap_tmp_ns__trainAdd;
	struct ns__trainAddResponse *soap_tmp_ns__trainAddResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_tmp_ns__trainAdd.imgPath = imgPath;
	soap_serializeheader(soap);
	soap_serialize_ns__trainAdd(soap, &soap_tmp_ns__trainAdd);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__trainAdd(soap, &soap_tmp_ns__trainAdd, "ns:trainAdd", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__trainAdd(soap, &soap_tmp_ns__trainAdd, "ns:trainAdd", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tag)
		return soap_closesock(soap);
	soap_default_int(soap, tag);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__trainAddResponse = soap_get_ns__trainAddResponse(soap, NULL, "", "");
	if (!soap_tmp_ns__trainAddResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (tag && soap_tmp_ns__trainAddResponse->tag)
		*tag = *soap_tmp_ns__trainAddResponse->tag;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__trainDelete(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string imgPath, int *tag)
{	struct ns__trainDelete soap_tmp_ns__trainDelete;
	struct ns__trainDeleteResponse *soap_tmp_ns__trainDeleteResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_tmp_ns__trainDelete.imgPath = imgPath;
	soap_serializeheader(soap);
	soap_serialize_ns__trainDelete(soap, &soap_tmp_ns__trainDelete);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__trainDelete(soap, &soap_tmp_ns__trainDelete, "ns:trainDelete", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__trainDelete(soap, &soap_tmp_ns__trainDelete, "ns:trainDelete", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tag)
		return soap_closesock(soap);
	soap_default_int(soap, tag);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__trainDeleteResponse = soap_get_ns__trainDeleteResponse(soap, NULL, "", "");
	if (!soap_tmp_ns__trainDeleteResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (tag && soap_tmp_ns__trainDeleteResponse->tag)
		*tag = *soap_tmp_ns__trainDeleteResponse->tag;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__serviceStart(struct soap *soap, const char *soap_endpoint, const char *soap_action, int *tag)
{	struct ns__serviceStart soap_tmp_ns__serviceStart;
	struct ns__serviceStartResponse *soap_tmp_ns__serviceStartResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	soap_serialize_ns__serviceStart(soap, &soap_tmp_ns__serviceStart);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__serviceStart(soap, &soap_tmp_ns__serviceStart, "ns:serviceStart", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__serviceStart(soap, &soap_tmp_ns__serviceStart, "ns:serviceStart", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tag)
		return soap_closesock(soap);
	soap_default_int(soap, tag);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__serviceStartResponse = soap_get_ns__serviceStartResponse(soap, NULL, "", "");
	if (!soap_tmp_ns__serviceStartResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (tag && soap_tmp_ns__serviceStartResponse->tag)
		*tag = *soap_tmp_ns__serviceStartResponse->tag;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__imSearch(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string imgPath, struct ns__searchResponse *ret)
{	struct ns__imSearch soap_tmp_ns__imSearch;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_tmp_ns__imSearch.imgPath = imgPath;
	soap_serializeheader(soap);
	soap_serialize_ns__imSearch(soap, &soap_tmp_ns__imSearch);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__imSearch(soap, &soap_tmp_ns__imSearch, "ns:imSearch", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__imSearch(soap, &soap_tmp_ns__imSearch, "ns:imSearch", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ret)
		return soap_closesock(soap);
	soap_default_ns__searchResponse(soap, ret);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns__searchResponse(soap, ret, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__serviceStop(struct soap *soap, const char *soap_endpoint, const char *soap_action, int *tag)
{	struct ns__serviceStop soap_tmp_ns__serviceStop;
	struct ns__serviceStopResponse *soap_tmp_ns__serviceStopResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	soap_serialize_ns__serviceStop(soap, &soap_tmp_ns__serviceStop);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__serviceStop(soap, &soap_tmp_ns__serviceStop, "ns:serviceStop", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__serviceStop(soap, &soap_tmp_ns__serviceStop, "ns:serviceStop", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tag)
		return soap_closesock(soap);
	soap_default_int(soap, tag);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__serviceStopResponse = soap_get_ns__serviceStopResponse(soap, NULL, "", "");
	if (!soap_tmp_ns__serviceStopResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (tag && soap_tmp_ns__serviceStopResponse->tag)
		*tag = *soap_tmp_ns__serviceStopResponse->tag;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__serviceRestart(struct soap *soap, const char *soap_endpoint, const char *soap_action, int *tag)
{	struct ns__serviceRestart soap_tmp_ns__serviceRestart;
	struct ns__serviceRestartResponse *soap_tmp_ns__serviceRestartResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	soap_serialize_ns__serviceRestart(soap, &soap_tmp_ns__serviceRestart);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__serviceRestart(soap, &soap_tmp_ns__serviceRestart, "ns:serviceRestart", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__serviceRestart(soap, &soap_tmp_ns__serviceRestart, "ns:serviceRestart", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tag)
		return soap_closesock(soap);
	soap_default_int(soap, tag);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__serviceRestartResponse = soap_get_ns__serviceRestartResponse(soap, NULL, "", "");
	if (!soap_tmp_ns__serviceRestartResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (tag && soap_tmp_ns__serviceRestartResponse->tag)
		*tag = *soap_tmp_ns__serviceRestartResponse->tag;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__state(struct soap *soap, const char *soap_endpoint, const char *soap_action, int *tag)
{	struct ns__state soap_tmp_ns__state;
	struct ns__stateResponse *soap_tmp_ns__stateResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	soap_serialize_ns__state(soap, &soap_tmp_ns__state);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__state(soap, &soap_tmp_ns__state, "ns:state", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__state(soap, &soap_tmp_ns__state, "ns:state", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tag)
		return soap_closesock(soap);
	soap_default_int(soap, tag);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__stateResponse = soap_get_ns__stateResponse(soap, NULL, "", "");
	if (!soap_tmp_ns__stateResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (tag && soap_tmp_ns__stateResponse->tag)
		*tag = *soap_tmp_ns__stateResponse->tag;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__progressPCT(struct soap *soap, const char *soap_endpoint, const char *soap_action, float *tag)
{	struct ns__progressPCT soap_tmp_ns__progressPCT;
	struct ns__progressPCTResponse *soap_tmp_ns__progressPCTResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	soap_serialize_ns__progressPCT(soap, &soap_tmp_ns__progressPCT);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__progressPCT(soap, &soap_tmp_ns__progressPCT, "ns:progressPCT", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__progressPCT(soap, &soap_tmp_ns__progressPCT, "ns:progressPCT", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tag)
		return soap_closesock(soap);
	soap_default_float(soap, tag);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__progressPCTResponse = soap_get_ns__progressPCTResponse(soap, NULL, "", "");
	if (!soap_tmp_ns__progressPCTResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (tag && soap_tmp_ns__progressPCTResponse->tag)
		*tag = *soap_tmp_ns__progressPCTResponse->tag;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__clear(struct soap *soap, const char *soap_endpoint, const char *soap_action, int *tag)
{	struct ns__clear soap_tmp_ns__clear;
	struct ns__clearResponse *soap_tmp_ns__clearResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	soap_serialize_ns__clear(soap, &soap_tmp_ns__clear);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__clear(soap, &soap_tmp_ns__clear, "ns:clear", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__clear(soap, &soap_tmp_ns__clear, "ns:clear", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tag)
		return soap_closesock(soap);
	soap_default_int(soap, tag);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__clearResponse = soap_get_ns__clearResponse(soap, NULL, "", "");
	if (!soap_tmp_ns__clearResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (tag && soap_tmp_ns__clearResponse->tag)
		*tag = *soap_tmp_ns__clearResponse->tag;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__pid(struct soap *soap, const char *soap_endpoint, const char *soap_action, int *tag)
{	struct ns__pid soap_tmp_ns__pid;
	struct ns__pidResponse *soap_tmp_ns__pidResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	soap_serialize_ns__pid(soap, &soap_tmp_ns__pid);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__pid(soap, &soap_tmp_ns__pid, "ns:pid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__pid(soap, &soap_tmp_ns__pid, "ns:pid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tag)
		return soap_closesock(soap);
	soap_default_int(soap, tag);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__pidResponse = soap_get_ns__pidResponse(soap, NULL, "", "");
	if (!soap_tmp_ns__pidResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (tag && soap_tmp_ns__pidResponse->tag)
		*tag = *soap_tmp_ns__pidResponse->tag;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__quit(struct soap *soap, const char *soap_endpoint, const char *soap_action, int *tag)
{	struct ns__quit soap_tmp_ns__quit;
	struct ns__quitResponse *soap_tmp_ns__quitResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_serializeheader(soap);
	soap_serialize_ns__quit(soap, &soap_tmp_ns__quit);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__quit(soap, &soap_tmp_ns__quit, "ns:quit", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__quit(soap, &soap_tmp_ns__quit, "ns:quit", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tag)
		return soap_closesock(soap);
	soap_default_int(soap, tag);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__quitResponse = soap_get_ns__quitResponse(soap, NULL, "", "");
	if (!soap_tmp_ns__quitResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (tag && soap_tmp_ns__quitResponse->tag)
		*tag = *soap_tmp_ns__quitResponse->tag;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__setParams(struct soap *soap, const char *soap_endpoint, const char *soap_action, int input, int *output)
{	struct ns2__setParams soap_tmp_ns2__setParams;
	struct ns2__setParamsResponse *soap_tmp_ns2__setParamsResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_tmp_ns2__setParams.input = input;
	soap_serializeheader(soap);
	soap_serialize_ns2__setParams(soap, &soap_tmp_ns2__setParams);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns2__setParams(soap, &soap_tmp_ns2__setParams, "ns2:setParams", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns2__setParams(soap, &soap_tmp_ns2__setParams, "ns2:setParams", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!output)
		return soap_closesock(soap);
	soap_default_int(soap, output);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns2__setParamsResponse = soap_get_ns2__setParamsResponse(soap, NULL, "", "");
	if (!soap_tmp_ns2__setParamsResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (output && soap_tmp_ns2__setParamsResponse->output)
		*output = *soap_tmp_ns2__setParamsResponse->output;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns2__textDetect(struct soap *soap, const char *soap_endpoint, const char *soap_action, xsd__base64Binary input, result *output)
{	struct ns2__textDetect soap_tmp_ns2__textDetect;
	struct ns2__textDetectResponse *soap_tmp_ns2__textDetectResponse;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://localhost:8888";
	soap_begin(soap);
	soap->encodingStyle = "";
	soap_tmp_ns2__textDetect.input = input;
	soap_serializeheader(soap);
	soap_serialize_ns2__textDetect(soap, &soap_tmp_ns2__textDetect);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns2__textDetect(soap, &soap_tmp_ns2__textDetect, "ns2:textDetect", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns2__textDetect(soap, &soap_tmp_ns2__textDetect, "ns2:textDetect", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!output)
		return soap_closesock(soap);
	output->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns2__textDetectResponse = soap_get_ns2__textDetectResponse(soap, NULL, "", "");
	if (!soap_tmp_ns2__textDetectResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (output && soap_tmp_ns2__textDetectResponse->output)
		*output = *soap_tmp_ns2__textDetectResponse->output;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
